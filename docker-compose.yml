version: '3'

services:

  firstms:
    container_name: FirstMs
    image: first-microservice
    build:
      context: .
    ports:
      - "${FIRST_HOST_PORT:-8082}:${FIRST_PORT:-8081}"
    environment:
        - FIRST_PORT=${FIRST_PORT}
        - FIRST_HOST_PORT=${FIRST_HOST_PORT}
        - SECOND_PORT=${SECOND_PORT}
        - FIRST_DB_USER=${FIRST_DB_USER}
        - FIRST_DB_PASSWORD=${FIRST_DB_PASSWORD}
        - FIRST_DB=${FIRST_DB}
        - FIRST_DB_PORT=${FIRST_DB_PORT}
    depends_on:
      - firstdb
      - zookeeper
      - kafka
    networks:
      - ms-network

  firstdb:
    image: postgres:16.2
    container_name: FirstDb
    environment:
      POSTGRES_USER: ${FIRST_DB_USER}
      POSTGRES_PASSWORD: ${FIRST_DB_PASSWORD}
      POSTGRES_DB: ${FIRST_DB}
    ports:
      - "${FIRST_DB_PORT}:${FIRST_DB_PORT}"
    command: ["postgres", "-p", "${FIRST_DB_PORT}"]
    networks:
      - ms-network

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    container_name: zookeeper
    ports:
      - "2181:2181"
    #    environment:
    #      ZOOKEEPER_CLIENT_PORT: 2181
    #      ZOOKEEPER_TICK_TIME: 2000
  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    expose:
      - "9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9093,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  ms-network:
    name: ms-network
    driver: bridge